---
- name: Set files directory for unix role
  ansible.builtin.set_fact:
    current_files_directory: "{{ role_path }}/files"

- name: Configure dotfiles
  ansible.builtin.include_role:
    name: dotfiles
  vars:
    base_path: role_path
    file_directory: "{{ current_files_directory }}"

- name: Set the $DOTFILES path for zsh
  ansible.builtin.set_fact:
    dotfiles_zsh_path: "{{ role_path }}/files/zsh"

- name: Generate .zshrc from template
  ansible.builtin.template:
    src: "zshrc.j2"
    dest: "{{ lookup('env', 'HOME') }}/.zshrc"
    mode: '0664'

- name: Check if Homebrew is installed
  ansible.builtin.stat:
    path: /opt/homebrew/bin/brew
  register: homebrew_installed
  failed_when: false
  changed_when: false
  ignore_errors: true

- name: Add Homebrew to PATH using lineinfile
  ansible.builtin.lineinfile:
    path: "{{ lookup('env', 'HOME') }}/.zshrc"
    line: 'export PATH=/opt/homebrew/bin:$PATH # brew'
    insertbefore: '^{{ custom_config_end_delimiter }}'
    state: present
  when:
    - homebrew_installed.stat.exists
  notify: Reload shell

- name: Check if GPG is installed
  ansible.builtin.command:
    cmd: gpg --version
  register: gpg_installed
  failed_when: false
  changed_when: false
  ignore_errors: true

- name: Add GPG line to .zshrc if GPG is installed
  ansible.builtin.lineinfile:
    path: "{{ lookup('env', 'HOME') }}/.zshrc"
    line: 'export GPG_TTY=$(tty) # GPG setup'
    insertbefore: '^{{ custom_config_end_delimiter }}'
    state: present
  when:
    - gpg_installed.rc == 0  # Only run if GPG is installed
  notify: Reload shell

- name: Check if Starship is installed
  ansible.builtin.command:
    cmd: starship --version
  register: starship_check
  failed_when: false
  changed_when: false
  ignore_errors: true

- name: Add Starship init line to .zshrc if Starship is installed
  ansible.builtin.lineinfile:
    path: "{{ lookup('env', 'HOME') }}/.zshrc"
    line: 'eval "$(starship init zsh)" # starship'
    insertbefore: '^{{ custom_config_end_delimiter }}'
    state: present
  when: starship_check.rc == 0
  notify: Reload shell

- name: Check if Android Command Line Tools is installed
  ansible.builtin.stat:
    path: /opt/homebrew/share/android-commandlinetools
  register: android_installed
  failed_when: false
  changed_when: false
  ignore_errors: true

- name: Add Android Command Line Tools to PATH
  ansible.builtin.blockinfile:
    path: "{{ lookup('env', 'HOME') }}/.zshrc"
    block: |
      export ANDROID_SDK_ROOT=/opt/homebrew/share/android-commandlinetools
      export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin
      export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools
      export PATH=$PATH:$ANDROID_SDK_ROOT/emulator
    insertbefore: '^{{ custom_config_end_delimiter }}'
    state: present
    marker: "# {mark} Android SDK"
  when:
    - android_installed.stat.exists
  notify: Reload shell
