{
  "files.exclude": {
    "**/.DS_Store": true,
    "**/.git": false,
    "**/.gitignore": false,
    "**/.gitmodules": true,
    "**/*.booproj": true,
    "**/*.pidb": true,
    "**/*.suo": true,
    "**/*.user": true,
    "**/*.userprefs": true,
    "**/*.unityproj": true,
    "**/*.dll": true,
    "**/*.exe": true,
    "**/*.pdf": true,
    "**/*.mid": true,
    "**/*.midi": true,
    "**/*.wav": true,
    "**/*.ico": true,
    "**/*.psd": true,
    "**/*.tga": true,
    "**/*.3ds": true,
    "**/*.3DS": true,
    "**/*.fbx": true,
    "**/*.FBX": true,
    "**/*.lxo": true,
    "**/*.LXO": true,
    "**/*.ma": true,
    "**/*.MA": true,
    "**/*.obj": true,
    "**/*.OBJ": true,
    "**/*.asset": true,
    "**/*.cubemap": true,
    "**/*.flare": true,
    "**/*.mat": true,
    "**/*.meta": true,
    "**/*.prefab": true,
    "**/*.unity": true,
    "build/": true,
    "Build/": true,
    "Library/": true,
    "library/": true,
    "obj/": true,
    "Obj/": true,
    "ProjectSettings/": true,
    "temp/": true,
    "Temp/": true,
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true,
    "**/.trunk/*actions/": true,
    "**/.trunk/*logs/": true,
    "**/.trunk/*notifications/": true,
    "**/.trunk/*out/": true,
    "**/.trunk/*plugins/": true
  },
  "[dart]": {
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    // settings for const
    "editor.codeActionsOnSave": {},
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off"
  },
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.insertSpaces": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.stickyScroll.enabled": true,
  "editor.fontFamily": "Hack Nerd Font, 'Courier New', monospace",
  "editor.inlayHints.fontFamily": "Hack Nerd Font",
  "debug.console.fontFamily": "Hack Nerd Font",
  "files.associations": {
    "*.dart": "dart"
  },
  "dart.previewFlutterUiGuides": true,
  "dart.previewFlutterUiGuidesCustomTracking": true,
  "dart.testInvocationMode": "name",
  "dart.showInspectorNotificationsForWidgetErrors": false,
  "dart.debugExternalPackageLibraries": true,
  "dart.debugSdkLibraries": true,
  "dart.checkForSdkUpdates": false,
  "dart.renameFilesWithClasses": "always",
  "dart.experimentalRefactors": true,
  "editor.suggestSelection": "first",
  "terminal.external.osxExec": "Alacritty.app",
  "editor.lineNumbers": "relative",
  "redhat.telemetry.enabled": false,
  "notebook.lineNumbers": "on",
  "editor.accessibilitySupport": "off",
  "javascript.preferences.quoteStyle": "single",
  "typescript.preferences.quoteStyle": "single",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.CustomBrowser": "firefox",
  "git.openRepositoryInParentFolders": "never",
  "dance.menus": {
    "object": {
      "title": "Select object...",
      "items": {
        "w": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "[\\p{L}_\\d]+(?<after>[^\\S\\n]+)"
            }
          ],
          "text": "word"
        },
        "W": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "[\\S]+(?<after>[^\\S\\n]+)"
            }
          ],
          "text": "WORD"
        },
        "s": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#predefined=sentence)"
            }
          ],
          "text": "sentence"
        },
        "p": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#predefined=paragraph)"
            }
          ],
          "text": "paragraph"
        },
        " ": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?<before>[\\s]+)[^\\S\\n]+(?<after>[\\s]+)"
            }
          ],
          "text": "whitespaces"
        },
        "i": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#predefined=indent)"
            }
          ],
          "text": "indent"
        },
        "()": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "\\((?#inner)\\)"
            }
          ],
          "text": "parenthesis block"
        },
        "{}": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "\\{(?#inner)\\}"
            }
          ],
          "text": "braces block"
        },
        "[]": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "\\[(?#inner)\\]"
            }
          ],
          "text": "brackets block"
        },
        "<>": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "<(?#inner)>"
            }
          ],
          "text": "angle block"
        },
        "\"": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#noescape)\"(?#inner)(?#noescape)\""
            }
          ],
          "text": "double quote string"
        },
        "'": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#noescape)'(?#inner)(?#noescape)'"
            }
          ],
          "text": "single quote string"
        },
        "`": {
          "command": "dance.seek.object",
          "args": [
            {
              "input": "(?#noescape)`(?#inner)(?#noescape)`"
            }
          ],
          "text": "grave quote string"
        },
        "c": {
          "command": "dance.seek.object",
          "text": "custom object desc"
        }
      }
    },
    "match": {
      "title": "Match...",
      "items": {
        "m": {
          "text": "Goto matching bracket",
          "command": "dance.seek.enclosing"
        },
        "s": {
          "text": "Surround add",
          "command": "dance.match.surround"
        },
        "r": {
          "text": "Surround replace",
          "command": "dance.match.surroundreplace"
        },
        "d": {
          "text": "Surround delete",
          "command": "dance.match.surrounddelete"
        },
        "a": {
          "text": "Select around object",
          "command": "dance.seek.askObject"
        },
        "i": {
          "text": "Select inside object",
          "command": "dance.seek.askObject.inner"
        }
      }
    },
    "space": {
      "title": "Space",
      "items": {
        "e": {
          "text": "Toggle explorer",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        "t": {
          "text": "Toggle terminal",
          "command": "workbench.action.togglePanel"
        },
        "f": {
          "text": "Open file picker",
          "command": "workbench.action.quickOpen"
        },
        "b": {
          "text": "Open buffer picker",
          "command": "workbench.action.showAllEditors"
        },
        "s": {
          "text": "Open symbol picker",
          "command": "workbench.action.gotoSymbol"
        },
        "a": {
          "text": "Perform code action",
          "command": "editor.action.quickFix"
        },
        "d": {
          "text": "Start debug",
          "command": "workbench.action.debug.start"
        },
        "w": {
          "text": "Window",
          "command": "dance.window.windowMenu"
        },
        "y": {
          "text": "Join and yank selections to clipboard",
          "command": "dance.selections.saveText",
          "args": [
            {
              "register": ""
            }
          ]
        },
        "p": {
          "text": "Paste clipboard after selections",
          "command": "dance.edit.insert",
          "args": [
            {
              "handleNewLine": true,
              "where": "end"
            }
          ]
        },
        "Pâ€‹": {
          "text": "Paste clipboard before selections",
          "command": "dance.edit.insert",
          "args": [
            {
              "handleNewLine": true,
              "where": "start"
            }
          ]
        },
        "/": {
          "text": "Global Search in workspace folder",
          "command": "workbench.action.findInFiles"
        },
        "k": {
          "text": "Show docs for item under cursor (hover)",
          "command": "editor.action.showHover"
        },
        "r": {
          "text": "Rename symbol",
          "command": "editor.action.rename"
        },
        "?": {
          "text": "Open command palette",
          "command": "workbench.action.showCommands"
        }
      }
    },
    "goto": {
      "title": "Go...",
      "items": {
        "g": {
          "text": "to first line",
          "command": "dance.select.lineStart",
          "args": [
            {
              "count": 1
            }
          ]
        },
        "e": {
          "text": "to last char of last line",
          "command": "dance.select.lineEnd",
          "args": [
            {
              "count": 2147483647
            }
          ]
        },
        "f": {
          "text": "to file whose name is selected",
          "command": "dance.selections.open"
        },
        "h": {
          "text": "to line start",
          "command": "dance.select.lineStart"
        },
        "l": {
          "text": "to line end",
          "command": "dance.select.lineEnd"
        },
        "s": {
          "text": "to non-blank line start",
          "command": "dance.select.lineStart",
          "args": [
            {
              "skipBlank": true
            }
          ]
        },
        "t": {
          "text": "to first displayed line",
          "command": "dance.select.firstVisibleLine"
        },
        "c": {
          "text": "to middle displayed line",
          "command": "dance.select.middleVisibleLine"
        },
        "b": {
          "text": "to last displayed line",
          "command": "dance.select.lastVisibleLine"
        },
        "d": {
          "text": "to definition",
          "command": "editor.action.revealDefinition"
        },
        "y": {
          "text": "to type definition",
          "command": "editor.action.goToTypeDefinition"
        },
        "r": {
          "text": "to references",
          "command": "editor.action.goToReferences"
        },
        "i": {
          "text": "to implementation",
          "command": "editor.action.goToImplementation"
        },
        "a": {
          "text": "to last accessed buffer",
          "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
        },
        "n": {
          "text": "to next buffer",
          "command": "workbench.action.nextEditor"
        },
        "p": {
          "text": "to previous buffer",
          "command": "workbench.action.previousEditor"
        },
        ".": {
          "text": "to last buffer modification position",
          "command": "dance.selections.restore",
          "args": [
            {
              "register": " insert"
            }
          ]
        }
      }
    },
    "window": {
      "title": "Window",
      "items": {
        "w": {
          "text": "Goto next window",
          "command": "workbench.action.nextEditor"
        },
        "s": {
          "text": "Horizontal bottom split",
          "command": "workbench.action.splitEditorDown"
        },
        "v": {
          "text": "Vertical right split",
          "command": "workbench.action.splitEditor"
        },
        "t": {
          "text": "Transpose splits",
          "command": "workbench.action.toggleEditorGroupLayout"
        },
        "q": {
          "text": "Close window",
          "command": "workbench.action.closeActiveEditor"
        },
        "o": {
          "text": "Close all other windows (Current window only)",
          "command": "workbench.action.closeOtherEditors"
        },
        "h": {
          "text": "Jump to the split on the left",
          "command": "workbench.action.focusLeftGroup"
        },
        "j": {
          "text": "Jump to the split below",
          "command": "workbench.action.focusBelowGroup"
        },
        "k": {
          "text": "Jump to the split above",
          "command": "workbench.action.focusAboveGroup"
        },
        "l": {
          "text": "Jump to the split to the right",
          "command": "workbench.action.focusRightGroup"
        },
        "H": {
          "text": "Swap with the split to the left",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        "J": {
          "text": "Swap with the split below",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        "K": {
          "text": "Swap with the split above",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        "L": {
          "text": "Swap with the split to the right",
          "command": "workbench.action.moveActiveEditorGroupRight"
        }
      }
    },
    "view": {
      "title": "View",
      "items": {
        "zc": {
          "text": "center cursor vertically",
          "command": "dance.view.line",
          "args": [
            {
              "at": "center"
            }
          ]
        },
        "t": {
          "text": "cursor on top",
          "command": "dance.view.line",
          "args": [
            {
              "at": "top"
            }
          ]
        },
        "b": {
          "text": "cursor on bottom",
          "command": "dance.view.line",
          "args": [
            {
              "at": "bottom"
            }
          ]
        },
        "j": {
          "text": "scroll down",
          "command": "editorScroll",
          "args": [
            {
              "to": "down",
              "by": "line",
              "revealCursor": true
            }
          ]
        },
        "k": {
          "text": "scroll up",
          "command": "editorScroll",
          "args": [
            {
              "to": "up",
              "by": "line",
              "revealCursor": true
            }
          ]
        }
      }
    }
  },
  "markdown.preview.scrollPreviewWithEditor": false,
  "workbench.sideBar.location": "right",
  "[glsl]": {
    "editor.defaultFormatter": "raczzalan.webgl-glsl-editor"
  },
  "settingsSync.ignoredSettings": [
    "-window.zoomLevel"
  ],
  "window.zoomLevel": 1,
  "workbench.colorTheme": "GitHub Dark",
  "rest-client.environmentVariables": {
    "$shared": {}
  },
  "cSpell.userWords": [
    "actix",
    "Alacritty",
    "androidx",
    "Animatable",
    "ARGB",
    "autocorrect",
    "codeowners",
    "cupertino",
    "cyclomatic",
    "dartdocs",
    "Datagram",
    "Direnv",
    "dotfiles",
    "fpdart",
    "fullscreen",
    "githook",
    "gitmessage",
    "gitmodules",
    "glsl",
    "Gwon",
    "lateinit",
    "lerp",
    "liveshare",
    "LTRB",
    "LTWH",
    "Memoizer",
    "microtask",
    "neovim",
    "noescape",
    "nums",
    "nvim",
    "pbenum",
    "pbgrpc",
    "pbjson",
    "PLAIF",
    "proto",
    "protobuf",
    "protos",
    "pubspec",
    "Puzzy",
    "raczzalan",
    "Reclip",
    "reqwest",
    "rgba",
    "riverpod",
    "roadmap",
    "scrollbars",
    "sponsers",
    "strs",
    "surrounddelete",
    "surroundreplace",
    "TLDR",
    "unfocus",
    "unstage",
    "uppercased",
    "vsintellicode",
    "vsync",
    "webgl",
    "webhint",
    "websockets",
    "whichkey",
    "whitespaces",
    "widgetbook",
    "wordlist",
    "xxxxl",
    "Youngmin",
    "youngmingwon"
  ],
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]",
    "REF"
  ],
  "workbench.iconTheme": "material-icon-theme",
  "material-icon-theme.folders.associations": {
    "domain": "container",
    "presentation": "mobile",
    "repository": "interface",
    "infrastructure": "plugin",
    "view_model": "class",
    "ui": "layout",
    "protos": "proto"
  },
  "advancedNewFile.exclude": {
    "node_modules": true,
    "node_modules_electron": true,
    "dev": true,
    "dist": true
  },
  "advancedNewFile.showInformationMessages": true,
  "advancedNewFile.convenienceOptions": [
    "last",
    "current",
    "root"
  ],
  "explorer.compactFolders": false,
  "lldb.library": "/Applications/Xcode.app/Contents/SharedFrameworks/LLDB.framework/Versions/A/LLDB",
  "lldb.launch.expressions": "native",
  "files.watcherExclude": {
    "**/.trunk/*actions/": true,
    "**/.trunk/*logs/": true,
    "**/.trunk/*notifications/": true,
    "**/.trunk/*out/": true,
    "**/.trunk/*plugins/": true
  },
  "git.autofetch": true,
  "editor.renderWhitespace": "all",
  "editor.copyWithSyntaxHighlighting": true,
  "cloudcode.duetAI.project": "single-outrider-430308-k2",
  "cloudcode.project": "single-outrider-430308-k2",
  "diffEditor.codeLens": true,
  "diffEditor.ignoreTrimWhitespace": false
}