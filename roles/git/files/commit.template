# TLDR; commit example
#
# ```
# <type>(<scope>): <description>
# feat(ui): add custom app bar with gradient
# ```
#
# 제목은 최대 50글자까지 아래에 작성: ex) feat: add key mapping
# 본문은 아래에 작성
# 꼬릿말은 아래에 작성: ex) Github issue #23
#
# 1. <type>
# ------------------
#   feat        : 사용자를 위한 새로운 기능 도입시, 예를 들어 UI element 혹은 기능
#                 e.g. feat(api): integrate new user API
#
#   fix         : 버그 수정, 종종 issue 번호와 관련 있음
#                 e.g. fix(auth): correct token expiration handling
#
#   refactor    : 기능 변경 없이 코드 구조 재정렬된 경우
#                 e.g. refactor(home): streamline widget layout
#
#   style       : 코드 스타일, lint 등의 코드 포맷팅 관련 변경
#                 e.g. style(auth): apply formatting and fix linter warnings
#
#   chore       : 빌드 스크립트 수정, assets, 패키지 매니저 등 변경사항
#                 e.g. chore: update Flutter SDK to latest stable
#
#   test        : 테스트 코드 생성 및 수정
#                 e.g. test(widget): add tests for ListView scroll behavior
#
#   docs        : 문서만 변경
#                 e.g. docs: add documentation for custom theme setup
#
#   perf        : 성능 향상 관련 변경
#                 e.g. perf(image): improve loading time for profile pictures
#
#   build       : 빌드 시스템에 영향을 주거나 외부 의존성과 관련된 변경
#                 e.g. build: update Gradle wrapper for Android
#
#   rename      : 파일 혹은 폴더명을 수정하거나 옮기는 작업만 한 경우
#
#   remove      : 파일을 삭제하는 작업만 수행한 경우
#
# ------------------
# 2. <scope>
#   앱의 변경 사항을 적용하는 부분
#
#   e.g.
#   ui: 화면 관련 변경 사항
#   auth: 사용자 인증 관련
#   api: 백앤드와 연결
#   widget: 위젯 관련 변경 사항
#
# ------------------
# 3. <description>
#
#   제목 첫 글자를 소문자로
#   제목은 명령문으로
#   제목 끝에 마침표(.) 금지
#   제목과 본문을 한 줄 띄워 분리하기
#   본문은 "어떻게" 보다 "무엇을", "왜"를 설명한다.
#   본문에 여러줄의 메시지를 작성할 땐 "-"로 구분
# ------------------
# 4. <outro>
#
#   필수가 아닌 optioanl
#   Fixes        :이슈 수정중 (아직 해결되지 않은 경우)
#   Resolves     : 이슈 해결했을 때 사용
#   Ref          : 참고할 이슈가 있을 때 사용
#   Related to   : 해당 커밋에 관련된 이슈번호 (아직 해결되지 않은 경우)
#   ex) Fixes: #47 Related to: #32, #21